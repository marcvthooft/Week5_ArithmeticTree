package tree;

import java.awt.Color;
import java.util.ArrayList;
import javax.swing.Box;
import javax.swing.JOptionPane;
import javax.swing.JTextPane;
import javax.swing.text.BadLocationException;
import javax.swing.text.Style;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyledDocument;

/**
 *
 * @author Marc
 */
public class ArithmeticTreeGUI extends javax.swing.JFrame {

    /**
     * Creates new form ArithmeticTreeGUI
     */
    public ArithmeticTreeGUI() {
        initComponents();
        
        //voeg menu item toe rechts alligned(kan niet in designer)
        menuHelp = new javax.swing.JMenu();
        menuHelp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tree/help_icon_small.png")));
        menuHelp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuHelpMouseClicked(evt);
            }
        });
        menuBar.add(Box.createHorizontalGlue());
        menuBar.add(menuHelp);        
        
        //creëer text stylen
        doc = paneBoom.getStyledDocument();
        style = paneBoom.addStyle("I'm a Style", null);
        StyleConstants.setFontFamily(style, "Courier new");
        StyleConstants.setFontSize(style, 13);
        errorStyle = paneBoom.addStyle("errors", null);
        StyleConstants.setFontFamily(errorStyle, "Calibri");
        StyleConstants.setForeground(errorStyle, Color.red);
        
        treeGen = new TreeGenerator();
        listGen = new ListGenerator(this);
        treePrint = new TreePrinter(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        inputTextField = new javax.swing.JTextField();
        button_CreateTree = new javax.swing.JButton();
        buttonClear = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        paneBoom = new javax.swing.JTextPane();
        menuBar = new javax.swing.JMenuBar();
        menuOver = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Wiskunde boom");

        inputTextField.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        inputTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                inputTextFieldKeyPressed(evt);
            }
        });

        button_CreateTree.setText("genereer boom");
        button_CreateTree.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_CreateTreeActionPerformed(evt);
            }
        });

        buttonClear.setText("clear");
        buttonClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonClearActionPerformed(evt);
            }
        });

        paneBoom.setEditable(false);
        jScrollPane2.setViewportView(paneBoom);

        menuOver.setText("Over");
        menuOver.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuOverMouseClicked(evt);
            }
        });
        menuBar.add(menuOver);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(inputTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(button_CreateTree)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonClear)
                        .addGap(0, 303, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button_CreateTree)
                    .addComponent(buttonClear))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 405, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Roept de methode tree aan, wanneer er user input is.
     * @param evt 
     */
    private void button_CreateTreeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_CreateTreeActionPerformed
        String userInput = inputTextField.getText();
        if (userInput.isEmpty()==false) {
            tree(userInput);
        }
    }//GEN-LAST:event_button_CreateTreeActionPerformed

    /**
     * Roept de methode tree aan, wanneer er user input is en er op enter is geklikt.
     * @param evt 
     */
    private void inputTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputTextFieldKeyPressed
        char enter = '\n';
        String userInput = inputTextField.getText();
        if (evt.getKeyChar()==enter && userInput.isEmpty()==false) {
            tree(userInput);
        }
    }//GEN-LAST:event_inputTextFieldKeyPressed

    private void buttonClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonClearActionPerformed
        inputTextField.setText(null);
        paneBoom.setText(null);
    }//GEN-LAST:event_buttonClearActionPerformed

    private void menuOverMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuOverMouseClicked
//        JOptionPane.showMessageDialog(null, "In dit programma kunt u een rekenkundige expressie invoeren, \n" +
//				"waar vervolgens een binaire boom van wordt gemaakt. Verwerkt kan worden: \n" +
//				"getallen en de tekens, + - * ( ). Voorbeeld: 5*56(4+7)/16. \n" +
//                                "Let op: dit is een prototype, expressies kunnen verwerkt worden \n" +
//				"tot een eindige lengte.");
        JOptionPane.showMessageDialog(null, "Programma die een binaire boom maakt van een gegeven wiskundige \n"
                + "expressie. \n\n @Marc van 't Hooft, 2012", "Over", JOptionPane.PLAIN_MESSAGE);
    }//GEN-LAST:event_menuOverMouseClicked
    
    private void menuHelpMouseClicked(java.awt.event.MouseEvent evt) {
        JOptionPane.showMessageDialog(null, "Voer een wiskunde som in, bijvoorbeeld: 5+6(7/8). Klik op genereer boom \n"
                + "om van de som een boom te maken! \n\n"
                + "Toegestaande tekens: + - / * ( ) en alle getallen. \n"
                + "Tips: \n"
                + "- Gebruik enkelvoudige cijfers voor een mooie boom. \n"
                + "- Dit prototype kan expressies afdrukken tot een bepaalde lengte, \n"
                + "maak de expressie niet al te lang. \n\n"
                + "max. expressie: \n"
                + "(((1-2)+(3-4))-((5*6)+(7*8)))+(((9/10)+(11-12))-((13*14)+(15*16)))", "Help", JOptionPane.PLAIN_MESSAGE);
    }    
    
    /**
     * Zodat andere klasse de textpane kunnen bewerken.
     * @return paneBoom
     */
    public JTextPane getBoomPane() {
        return paneBoom;
    }
    
    /**
     * Doormiddel van doc kan paneBoom bewerkt worden.
     * @return doc
     */
    public StyledDocument getDoc() {
        return doc;
    }
    
    /**
     * Geeft de style terug(monospaced lettertype).
     * @return style
     */
    public Style getStyle() {
        return style;
    }
    
    /**
     * Geeft de errorStyle terug(rood lettertype).
     * @return errorStyle
     */
    public Style getErrorStyle() {
        return errorStyle;
    }
    
    /**
     * Vanuit deze methode wordt alles aangeroepen voor het creëeren van de boom.
     * @param userInput 
     */
    private void tree(String userInput) {
        //Weergeven: " 'expressie' boom: "
        StyleConstants.setForeground(errorStyle, Color.black);
        StyleConstants.setItalic(errorStyle, true);
        try { doc.insertString(doc.getLength(), "'" + userInput + "'" + "  boom: \n", errorStyle); } 
        catch (BadLocationException e){}
        StyleConstants.setForeground(errorStyle, Color.red);
        StyleConstants.setItalic(errorStyle, false);
        
        ArrayList<String> list = listGen.makeList(userInput);
        Integer errors = listGen.checkList();
        if (errors==0) {
            ArrayList<Node> nodeTree = treeGen.createNodeTree(list);
            treePrint.printAritmeticTree(nodeTree);
        } else {
            try { doc.insertString(doc.getLength(), "Er zijn " + errors.toString() + " errors gedetecteerd \n", errorStyle); }
            catch (BadLocationException e){}
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        //create tree
//        TreeGenerator tree = new TreeGenerator();
        
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ArithmeticTreeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ArithmeticTreeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ArithmeticTreeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ArithmeticTreeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ArithmeticTreeGUI().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonClear;
    private javax.swing.JButton button_CreateTree;
    private javax.swing.JTextField inputTextField;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenu menuOver;
    private javax.swing.JTextPane paneBoom;
    // End of variables declaration//GEN-END:variables
    //eigen variabelen
    private StyledDocument doc;
    private Style style;
    private Style errorStyle;
    private TreeGenerator treeGen;
    private ListGenerator listGen;
    private TreePrinter treePrint;
    private javax.swing.JMenu menuHelp;
}
